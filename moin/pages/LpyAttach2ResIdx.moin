##language:zh
#pragma section-numbers off
[[TableOfContents]]
## 默许导航,请保留
##[[Include(ZPyUGnav)]]

##|校对|正式 
||'''status'''|| 草稿|| ZoomQuiet,Liz|| 完成度:101% CPyUG行者不断增补ing||


##startInc
= Python 资源索引 =
经过十数年的发展积累,Python 应用的触角早已深入了各个领域! 在网络中的资源也浩如烟海:
 * 图atta2-1 使用Google 搜索Python 时的反馈
attachment:2008-10-14-google-python.png

在此行者们也只能根据自己的实际开发体验,推荐一些常见领域的优秀资源给好奇的读者们;-)

以下,使用粗略的领域分类,来展示不同层次相关应用的Python 技术:

== Py 语言自身 ==
`就Python 语言本身的学习参考资源`

 常备::
  建议放在手边随时看的:
  * Python Tutorial 中文版
   * 访问地址: http://wiki.woodpecker.org.cn/moin/March_Liu/PyTutorial
   * 精巧地址: http://bit.ly/1rzx1n
   * Python 教程是世上唯一 Guido van Rossum 撰写的文档!这里是由知名行者刘鑫长期维护的中文版本;
  * 简明 Python 教程 中文版
   * 访问地址: http://www.woodpecker.org.cn/share/doc/abyteofpython_cn/chinese/index.html
   * 精巧地址: http://bit.ly/4zQc4a
   * 印度程序员的个人Python 体验和学习教程
  * Python 绝对简明手册
   * 访问地址: http://wiki.woodpecker.org.cn/moin/PyAbsolutelyZipManual
   * 精巧地址: http://bit.ly/2EEz6I
   * 网络人称`张教主`的'''zsp007@gmail.com''' 根据自个儿的使用体验,将Python 语言中最最常用的语法使用整理而成;
  * Py标准库手册
   * 访问地址: http://wiki.woodpecker.org.cn/moin/PythonStandardLib
   * 精巧地址: http://bit.ly/4iH5V5
   * 由 `Python 江湖QQ群` 集体翻译的Python 2.0 标准模块库说明
  
 深入::
  在开发过程中,应该精读的:
  * Dive into Python 
   * 访问地址: http://www.woodpecker.org.cn/diveintoPython /
   * 精巧地址: http://bit.ly/2H4vrR
   * 深入Python ~ 简称`DiP`,是知名称最高的Python 编程技巧图书,使用几个不断演进的实例,从方方面面讲解Python 最细微处的开发技巧,不向初学者推荐;
  * Python 开发编码规范
   * 访问地址: http://wiki.woodpecker.org.cn/moin/PythonCodingRule
   * 精巧地址:  http://bit.ly/3HURoL
   * 是官方增进方案 PEP 008 "Style Guide for Python Code" 的中文翻译!
    * 原文地址: http://www.python.org/dev/peps/pep-0008/
    * 精巧地址: http://bit.ly/2OQ8Z3
   * 对开发Python 应用脚本,代码的组织给出了非常详进的建议
  * ASPN:Python 
   * 访问地址: http://aspn.activestate.com/ASPN/Python 
   * 精巧地址: http://bit.ly/3UMD8w
   * `ASPN` 就是 ActivePython 套件的出品公司组织的网站,汇集了大量E文资料,其中的 CookBook 非常实用,有什么问题搜查一下就好;
  * Python 之优雅与瑕疵: 
   * 访问地址: http://wiki.woodpecker.org.cn/moin/PyBlemish
   * 精巧地址: http://bit.ly/4jvqeV
   * 是Python 专家 `David Mertz`的私人总结,针对Python 2.* 版本对 1.5.* 版本间变更较重大的语言部分进行了讲解;Python 本身隐密的角落相比其它语言要少的多,但是总是有可能会遇到的,幸好总是有好心人进行了分享;应该及时吸收;
   
 前沿::
  Python 是个高速发展的语言,本身在进行什么样的发展?未来将会如何?都是应该深入关注的:
  * Python Enhancement Proposals
   * 访问地址: http://www.python.org/dev/peps/
   * 精巧地址: http://bit.ly/fwcW8
   * Python 增进提案库 ~ 缩写 PEPs ; 是Python 最前沿和最官方的特性讨论中心,关心Python 未来趋势,以及现有技术细核的读者,应该认真学习;
  * Python 3000 进度报告
   * 访问地址: http://wiki.woodpecker.org.cn/moin/Py3000StatusUpdate
   * 精巧地址: http://bit.ly/2IwaEp
   * Guido 亲自撰写的 Python 3000 开发情况(啄木鸟社区翻译版本);Py3k 或是说Py3.0 是一个准备从头来写的一个分支,和过往的2.* 系列版本不准备兼容,是 Guido 准备一次性解决 Python 一些固有问题的勇敢的计划;
   * 对应的最新开发版本下载: Python 3.0 Release (2008-12-3)
    * 访问地址: http://www.python.org/download/releases/3.0/
    * 精巧地址: http://bit.ly/1a3p5I
  * Stackless.com
   * 访问地址: http://www.stackless.com/
   * 这是针对传统 CPython 对于线程保守态度的一个积极应对;通过对C语言实现的Python 进行小的改进,获得了:
    * 简化的线程开发
    * 微线程扩展支持
    * 并发建模工具
   * 而且和 CPython 是完全二进制兼容的,可以使用所有传统Python 的模块
   * 而且已经在一些企业级情景中得到了应用,经典的有:
    1. EVE Online ~ 大型多人在线实时战略游戏 http://www.eve-online.com/
    1. Sylphis3D ~ 3D游戏引擎 http://devnet.sylphis3d.com/
  * PyPy
   * 访问地址: http://codespeak.net/pypy/dist/pypy/doc/home.html
   * 精巧地址: http://bit.ly/1svoIm
   * 这是 程序语言中的"流氓" http://inet6.blogspot.com/2007/03/pypy.html
    * 精巧地址: http://bit.ly/4h9uCA
    * 因为和其它开发语言相比, PyPy 根本是在作弊 ;-) 简单的说:
     1. PyPy是用Python 编写的 Python 语言(自称rPython )
     1. PyPy能将Python 脚本编译成原生的 C/.net(2.0)/javascript 等其它语言代码
     1. PyPy能将rPython 脚本编译成 javascript,用以生成客户端Ajax 应用
     1. PyPy能将rPython 脚本流程展示成视图
     1. 可以通过 JIT 自制编译器
    * 即! PyPy 通过Python 实现了,将Py语法组织的脚本和其它任意语言自由转换! 也就是说 PyPy 可以支持人们用Python 开发出各种语言的应用! 实在太有才了,绝对应该关注!
  * tinypy
   * http://www.tinypy.org/   
   * 出于一些苛刻环境中对Python 的召唤,将"电池"卸下后,Python 执行环境可以仅仅64K大小!
   
== Py 文本处理 ==
`文可文,非常文. 本可文,非常本. 文本,数据之始;字符,万思之母...`~对文本的处理是最基础和最常见的任务,这方面Python 有大量的愉快体验:

 常备::
  面对最经常遇见的文本数据进行处理:
  * Beautiful Soup
   * 访问地址: http://www.crummy.com/software/BeautifulSoup/
   * 精巧地址: http://bit.ly/3Ks24u
   * 美味的汤 ～ 面对大量由各种HTML文本构成的数据之汤 "Beautiful Soup" 提供各种方便的工具来进行处理！
  * Elements and Element Trees
   * 访问地址: http://effbot.org/zone/element.htm
   * 精巧地址: http://bit.ly/2IFCki
   * 由 sffbot.org 社区创立的XML快速解析模块,以以及精巧高效,而受到拥戴,并在 Python 2.5 版本正式接纳为默认模块! xml.etree.ElementTree
    * 访问地址: http://docs.python.org/library/xml.etree.elementtree.html
    * 精巧地址: http://bit.ly/PzKeA
  * Universal Encoding Detector
   * 访问地址: http://chardet.feedparser.org/docs/
   * 精巧地址: http://bit.ly/F2a5F
   * chardet ~ 宇宙牌编码探测器;-) 方便的探知指定文本是什么编码的文字! 这是中文应用不可缺少的模块!
  * pyzh 
   * 访问地址: http://code.google.com/p/pyzh/ 
   * 精巧地址: http://is.gd/51no
   * Python的中文本地化工具包. 包含:汉字到拼音的转换, 中英文字数统计,公历到阴历转换,中文分词,中英文文本折行, 支持多种编码的繁简转换
  * cssutils - CSS library for Python 
   * 访问地址: http://cthedot.de/cssutils/
   * 精巧地址: http://bit.ly/2rmUQ0
   * CSS文档专用处理支持

 深入::
  有关文本处理的专门话题:
  * Text Processing in Python : 
   * 访问地址: http://gnosis.cx/TPiP/
   * 精巧地址: http://bit.ly/3ZiI3k   
   * 专门论述Python 文本处理方面技巧的图书,已经出版:
   图atta2-2 TPiP 图书封面
   attachment:tpip-cover-small.jpg 
    * 页数: 544 pages
    * 出版: Addison-Wesley Professional (June 12, 2003)
    * 语言: English
    * ISBN-10: 0321112547
    * ISBN-13: 978-0321112545
   * 啄木鸟社区组织有翻译工程: http://wiki.woodpecker.org.cn/moin/TPiP (精巧地址：http://bit.ly/3IvsMk) 有兴趣的读者可以随时加入;-)
   
  * 结构化文本支持:
   * 这是种`WYTIWYG`~所想即所得的文档组织方式,通过简单的字符约定,在不影响阅读的情况下,将文章的结构声明在正文中,通过工具快速生成出各种格式文档来;
   * 部分综述:
    * 访问地址: http://wiki.woodpecker.org.cn/moin/AllAboutText
    * 精巧地址：http://bit.ly/4wDWKD
   * txt2tags: 
    * 访问地址: http://txt2tags.sourceforge.net/
    * 精巧地址: http://bit.ly/1esQt6
    * 多模式输出结构化文本工具,是一个已稳定发展了7年的精巧工具,可以从 .t2t 格式文本,输出 HTML/XHTML/SGML/LaTeX/Lout/Man page/Wikipedia/Google Code Wiki/DokuWiki/MoinMoin/MagicPoint/PageMake 多达12种文档!
    * 中文简介在: http://wiki.woodpecker.org.cn/moin/txt2tags
    * 整个工具仅仅由一个`txt2tags`Python 脚本组成,不但完成了所有功能,而且提供了一个图形界面:
    图atta2-3 t2t工具的图形界面
    attachment:txt2tags-gui.png        
   * reStructuredText
    * 访问地址: http://docutils.sourceforge.net/rst.html
    * 精巧地址: http://bit.ly/41iX8k
    * 新结构化文本,目前最完善的结构化文本出版工具,就连Python 官方网站的文档仓库 http://docs.python.org 也是使用 reST(reStructureText 的缩写)组织的!
  
 前沿::
  有关办公文档处理支持,各种Office 文档其实就是特殊DTD约束的XML文档;对于 M$ Office 产品,有好些种处理方式:
  1. 通过 win32com 模块,调用原生接口处理文档;
  1. 通过第三方模块:
   * xlrd extension
    * 访问地址: http://www.lexicon.net/sjmachin/xlrd.htm
    * 精巧地址: http://bit.ly/2fzVO3
    * 支持高效读取 Excel 数据的扩展
   * pyExcelerator
    * 访问地址: http://sourceforge.net/projects/pyexcelerator/
    * 精巧地址: http://bit.ly/21xP59
    * 可以对 Excel 文档进行读写的支持模块,一般使用参考:"limodou的学习记录:
     * 访问地址: http://blog.donews.com/limodou/archive/2005/07/09/460033.aspx
     * 精巧地址: http://bit.ly/1FX7Er
  1. 通过OOo(OpenOffice.org 办公套件) 中转:
   * Python -UNO bridge
    * 访问地址: http://udk.openoffice.org/python/python-bridge.html
    * 精巧地址: http://bit.ly/4lSYgZ
    * 由 OOo 提供的统一操作"桥",可以对 UNO组件进行方便的操作,也就是说可以对通过OOo 打开的Office 文档,进行完全的操纵!
  1. 通过docs.google中转:
   * Google 文档列表数据 API - Google 代码
    * 访问地址: http://code.google.com/intl/zh-CN/apis/documents/overview.html
    * 精巧地址: http://bit.ly/4eBlXA
    * https://docs.google.com 提供了一个在线办公环境,允许导入Office 文档,通过上述Google 提供的数据接口,就可以任意操纵Office文档的内容了,然后可以下载为 PDF/RDF/OOo/HTML 等等格式化文档
    
== Py 数据库应用 ==
只要是个产品化系统,多少都得和数据库打交道,Python 一直有全面支持:

 常备::
  常见DB产品支持,,,
  * DatabaseProgramming - Python Info Wiki
   * 访问地址: http://wiki.python.org/moin/DatabaseProgramming/
   * 精巧地址: http://bit.ly/1EYTXb
   * Python 官方收集的数据库开发资源索引
  * ADOdb for Python 
   * 访问地址: http://phplens.com/lens/adodb/adodb-py-docs.htm
   * 精巧地址: http://bit.ly/9bPgD
   * 源自PHP社区的跨DB操作支持模块,比较精巧稳定,主要使用 SQL和少量的常用操作函式;
  * DatabaseInterfaces - Python Info Wiki
   * 访问地址: http://wiki.python.org/moin/DatabaseInterfaces
   * 精巧地址: http://bit.ly/1laKvY
   * 数据库接口 ~ 官方收集的主流DB产品操作接口模块/产品索引
  * PySqlite2: 
   * 访问地址: http://www.initd.org/pub/software/pysqlite/
   * 精巧地址: http://bit.ly/RU1kS
   * SQLite的连接组件
  * MySQLdb:
   * 访问地址: http://mysql-python.sourceforge.net/
   * 精巧地址: http://bit.ly/37vYpy
   * 用于连接MySQL数据库的Python 模块.
  
 深入::
  进一步用OO方式操作关系DB的支持:
  * Python 数据库开发概要,收集了一些常见ORM框架: 
   * 访问地址: http://wiki.woodpecker.org.cn/moin/Py4Database
   * 精巧地址: http://bit.ly/IT9wY
  * ORM ~ Object Relational Mapping 对象关系映射
   * 访问地址: http://www.itisedu.com/phrase/200603051342455.html
   * 精巧地址: http://bit.ly/YWmce
   * 简单的说就是通过中间层的支持,可以使用对象引用的方式来操作关系型数据库的内容;即!不用学习SQL就可以操纵关系型数据库! 这方面,Python 有大量的优秀作品:
    1. SQLObject
     * 访问地址: http://sqlobject.org
     * 最早出现的比较成熟的ORM框架,一般简称`SO`;使用体验:"使用 SQLObject 连接数据库与 Python ":
      * 访问地址: http://www-128.ibm.com/developerworks/cn/opensource/os-pythonsqlo/
      * 精巧地址: http://bit.ly/4yZwfj
    1. SQLAlchemy - The Database Toolkit for Python 
     * 访问地址: http://www.sqlalchemy.org
     * 后起之秀,一般简称`SA`;使用体验:"强大的 sqlalchemy"
      * 访问地址: http://codeplayer.blogspot.com/2007/02/sqlalchemy.html
      * 精巧地址: http://bit.ly/2FJ76J
    1. Storm
     * 访问地址: https://storm.canonical.com
     * 精巧地址: http://bit.ly/1uGBvD
     * 指向更加OO的框架,使用体验:"Strom 上手指南"
      * 访问地址: http://linuxfire.com.cn/~huahua/doc/Strom 上手指南.html
      * 精巧地址: http://bit.ly/2Elrxd
    1. 等等,,,
          
 前沿::
  再进一步,直接用OO来组织自个儿的DB!即,完全不使用关系型数据库的模型,而使用纯对象关系来进行数据管理:
  * ZODB ~ the Zope Object Database
   * 访问地址: http://www.python.org/workshops/2000-01/proceedings/papers/fulton/zodb3.html
   * 精巧地址: http://bit.ly/2mPSJA
   * 包含在Zope 平台中的对象数据库,也是最先稳固到可以给企业使用的一种开源ODB产品
  * Shelve2
   * 访问地址: http://code.google.com/p/missile-db/wiki/Shelve2Book
   * 精巧地址: http://bit.ly/2igRe
   * 脱胎于Durus 对象数据库的原创ODB,已经在国内知名IT企业内部得到应用的国产作品,可以视作精简版本的ZODB!
  * buzhug
   * 访问地址: http://buzhug.sourceforge.net/intro.html
   * 精巧地址: http://bit.ly/NfIAc
   * 曾被Karrigell 框架选作默认组件的轻型对象数据库作品
  * iODBC.org
   * 访问地址: http://www.iodbc.org/index.php?page=languages/python/odbc-pythonHOWTO
   * 精巧地址: http://bit.ly/2YJWDX

== Py 网络应用 ==
进入互联网时代,和网络资源互动是基础要求,这方面 Python 有各种方面的支持:
 常备::
  常见网络协议支持,注意!都是内置的!
  * Smtplib: 
   * 访问地址: http://www.python.org/doc/2.5.2/lib/module-smtplib.html
   * 精巧地址: http://bit.ly/1aroqp
   * 发送电子邮件模块.
  * ftplib:
   * 访问地址: http://www.python.org/doc/2.5.2/lib/module-ftplib.html
   * 精巧地址: http://bit.ly/2zdwzr
   * 定义了FTP类和一些方法,用于客户端的ftp编程.
  * xmpppy:
   * 访问地址: http://blog.donews.com/limodou/archive/2005/03/11/298935.aspx
   * 精巧地址: http://bit.ly/3qN1Nb
   * Jabber服务器采用的是XMPP协议,就像Google Talk也是采用XMPP协议的IM系统,Python 的xmpppy模块支持该协议,通过该模块可以与Jabber服务器通信.   
  * BitTorrent.org
   * 访问地址: http://www.bittorrent.org
   * 改变世界下载格局的Bt,就是用Python 写出来的,虽然已经商业化,但是原先的代码依然可以在项目环境中查阅到:
    * 访问地址: http://bittorrent.org/trac
   * 作为理解,可以学习仅仅15行的: Annotated TinyP2P
    * 访问地址: http://www.exonsoft.com/~kochin/TinyP2P/tinyp2p.html
    * 精巧地址: http://bit.ly/3XxuSu

 深入::
  快速网络应用开发框架:
  * Python WEB应用框架纵览: 
   * 访问地址: http://wiki.woodpecker.org.cn/moin/PyWebFrameList
   * 精巧地址: http://bit.ly/1U4oHm
   * 也特别指出了,"为什么在Python 世界中有这么多Web应用框架"~ 因为,太容易实现了!
  * 进一步的请参考官方网站的汇总介绍:WebProgramming - Python Info Wiki
   * 访问地址: http://wiki.python.org/moin/WebProgramming
   * 精巧地址: http://bit.ly/jzKnm
  以下介绍一些流行框架:
  * CherryPy: 
   * 访问地址: http://wiki.woodpecker.org.cn/moin/CherryPyQuickIn
   * 精巧地址: http://bit.ly/1DGuQN
   * 最早的稳定OO化轻型应用框架;
  * Quixote: 
   * 访问地址: http://wiki.woodpecker.org.cn/moin/QuixoteQuickIn
   * 精巧地址: http://bit.ly/3ZD3AW
   * 豆瓣的核心动力,最早的关注高性能框架
  * Karrigell: 
   * 访问地址: http://karrigell.sourceforge.net/en/front.htm
   * 精巧地址: http://bit.ly/2z3ejE
   * 最早的关注轻松创建应用的轻型框架
  * Django: 
   * 访问地址: http://docs.djangoproject.com/
   * 精巧地址: http://bit.ly/2fEoz8
   * 最早也最知名的"一站式"高性能CMS应用框架,能自动生成的后台管理界面,非常适合快速开发;
  * Eurasia
   * 访问地址: http://code.google.com/p/eurasia/
   * 精巧地址: http://bit.ly/15ID3O
   * 国产框架,沈崴的力作, 是应用于百万级长连接, 或每秒上万次 CGI 请求的 Web 框架.  比如,网页聊天,网页游戏.
  * TurboGears:
   * 访问地址: http://wiki.woodpecker.org.cn/moin/TurboGearStepByStep
   * 精巧地址: http://bit.ly/1cTTYP
   * 和Django 对抗的"大框架"概念框架,TurboGears2将在下面pylons框架的基础上开发;
  * Pylons: 
   * 访问地址: http://wiki.pylonshq.com/display/pylonsdocs/Home
   * 精巧地址:  http://bit.ly/3MqEPh
   * 新近一代,关注高效开发的"一站式"框架.基于WSGI,开发理念和TurboGears类似,尽量复用现有的Python 组件,但是相对底层一些.
  * web.py: 
   * 访问地址: http://www.dup2.org/files/web.py%200.2%20tutorial.html
   * 精巧地址: http://bit.ly/3RqqmN
   * 最早的稳定精简框架,使用极少量的代码实现的全功能框架;
  * web2py: 
   * 访问地址: http://mdp.cti.depaul.edu/
   * 精巧地址: http://bit.ly/3x4nj9
   * 和web.py 名字最接近的ROR类框架,关注高速应用开发;
  * Uliweb: 
   * 访问地址: http://code.google.com/p/uliweb
   * 精巧地址: http://bit.ly/3ad6pc
   * 最新创建的国产框架,由Limodou 总结多年Web应用体验,精心组建!
  
 前沿::
  高性能网络平台:
  * Twisted
   * 访问地址: http://twistedmatrix.com/trac/
   * 精巧地址: http://bit.ly/1VhU8T
   * Twisted Matrix 是一种越来越受欢迎的纯 Python 框架,用来进行网络服务和应用程序的编程. 虽然 Twisted Matrix 中有大量松散耦合的模块化组件,但该框架的中心概念还是非阻塞异步服务器这一思想,可以帮助程序员快速构建出,能在繁重负载的情况下依然极高的效率的系统!   
  * Zope.org
   * 访问地址: http://www.zope.org/
   * 精巧地址: http://bit.ly/1L5AFS
   * 是发展了很长时间的超级框架~应该算平台了,从Zope1,Zope2 到现在的Zope3 都经过了大量的重写,包含了巨量的网络应用思想和产品,详细参考:Zope和Plone的发展现状 — 中国Zope/Plone用户组(2005年)
    * 访问地址: http://blog.czug.org/panjy/zope-plone-status
    * 精巧地址: http://bit.ly/3Gpn1r
   * 最新的 "Zope3中文宝典" 中文版:
    * 访问地址: http://docs.everydo.com/zope3/introduction/background.rst
    * 精巧地址: http://bit.ly/1XyOWD
    * 由 EveryDo.com 推出(这是润普公司使用Plone 开发的SaaS化项目管理服务平台),本身已经在向Zope3 迁移中!
  * GAE: 
   * 访问地址: http://code.google.com/appengine/docs/whatisgoogleappengine.html
   * 精巧地址: http://bit.ly/1Girr
   * 是 Google在2008年四月,发布的免费开发应用引擎,可以使用Python 利用Google 提供的一系列服务,在线发布应用;在一天之内吸引到了一万名程序员注册,到现在已经汇集了上十万个应用;依托Google 的"云计算"平台,可以期望形成强大的Python 应用热潮;
  * Thrift
   * 访问地址: http://incubator.apache.org/thrift/
   * 精巧网址: http://bit.ly/1U29Di
   * 跨语言网络中间件. 最早由Facebook开发,现已成为Apache的一个子项目. 
  * pyevent
   * 访问地址: http://code.google.com/p/pyevent/
   * 精巧网址: http://bit.ly/2GAKcb
   * libevent的Python封装, libevent支持网络IO、定时器、信号量,在高性能网络编程中有广泛的应用. 
  * `搜索引擎:`
   * Xapian:
    * 访问地址: http://xapian.org
    * C++编写的居于概率模型的搜索引擎后端,提供了python接口. 豆瓣部分搜索功能基于其开发. 
   * pychseg
    * 访问地址: http://code.google.com/p/pychseg/
    * 精巧地址: http://bit.ly/2cK366
    * 基于MMSEG的中文分词算法Python实现. 
   * Ozearch
    * 访问地址: http://ozearch.org/
    * 源於Oriental Search Engine. 是由樹德科技大學洪朝貴教授所命名,它同時也是一個意象文字, 代表的是Oz的耳朵能聽的懂中文.立志开发一个对中文进行最优化支持的搜索引擎;当然是纯Python 开发的 ;-)

== Py 嵌入系统 ==
上网已经不在是电脑的专利,越来越多的设备/设施在联入网络,提供数据和接受控制,Python 在这方面也非常适合:

 常备::
  常见嵌入式系统设备~手机平台的支持:
  * Nokia S60以上系统的Python 开发支持:
   * 访问地址: http://wiki.forum.nokia.com/index.php/Category:Python 
   * 精巧地址: http://bit.ly/2WwvU1
  * Openmoko.org
   * 访问地址: http://wiki.openmoko.org/wiki/Python 
   * 精巧地址: http://bit.ly/1j6jMR
   * 新兴的开源手机项目,提供了从硬件到软件的所有手机开发资源,Python 在其中可以开发各种手机桌面工具!
  * Android
   * 访问地址: http://code.google.com/intl/zh-CN/android/
   * 精巧地址: http://bit.ly/1MUO9K
   * Android 由 开放手机联盟（一个由 30 多家科技公司和手机公司组成的团体）组织开发开发;Android 是第一个完整／开放的免费手机平台;准备应用在Google 新一代手机平台中!


 前沿::
  对于更加广泛的有嵌入式GNU/Linux系统的设备,Python 同样可以进驻!
  * 沈崴路由器建站教程 - 沈崴 - 网易博客
   * 访问地址: http://eishn.blog.163.com/blog/static/65231820083995420860/
   * 精巧地址: http://bit.ly/3crtkc
   * 讲述如何在路由器中安装 StacklessPython 环境进行应用开发的操作; 也证明了,只要嵌入式系统是 GNU/Linux 类的都可以安装Python 环境为我所用!
  * Telit 是一家专业设计和生产无线模块产品的公司,值得注意的是,它几乎在所有的最新产品中集成了嵌入式Python 解释器,这样使用者就可以使用Python 脚本快速地开发应用,这些Python 脚本可以保存在模块内部运行,而不用另外的MCU去和模块进行AT命令交互;
   * 访问地址: http://www.telit.com/en/products/python.php
   * 精巧地址: http://bit.ly/4uJsAU
   
== Py 多媒体支持 ==
图形桌面是人们最经常接触的界面,多媒体应用更加是人们最喜爱的应用,这方面Python 也有不凡的支持:
 常备::
  普通的图形支持:
  * Python Imaging Library(PIL): 
   * 访问地址: http://wiki.woodpecker.org.cn/moin/PythonImagingLibrary
   * 精巧地址: http://bit.ly/2iNDy0
   * 提供强大的图片处理的能力,并提供广泛的图像文件格式支持,该库能进行图像格式的转换,打印和显示.还提供了一些基本图像处理接口.
  * Python Magick
   * 访问地址: http://www.imagemagick.org/download/python
   * 精巧地址: http://bit.ly/PHicT
   * 支持Python 自然的使用 ImageMagick® 提供的强大功能, 可以创建/编辑/转换近100种图片格式文档!以及增加图形特效;
  * Urwid
   * 访问地址: http://excess.org/urwid/  
   * 精巧地址: http://bit.ly/3oztKf
   * CLI ~ 命令行界面构建支持模块,可以快速创建在命令行窗口中基于字符的图形应用;
  * 各类绘图支持:
   1. ChartDirector for Python 
    * 访问地址: http://www.advsofteng.com/cdpython.html
    * 精巧地址: http://bit.ly/3JrKi1
    * 图表导演 ~ 是个商业软件,但是自由许可版本,没有限制任何功能,仅仅是在底部追加了一小条公司名称;可以快速根据数据创建各种漂亮的趋势图表;
   1. biggles 
    * 访问地址: http://biggles.sourceforge.net/libplot/
    * 精巧地址: http://bit.ly/1DT3jD
    * 调用 GNU plotutils 来生成各种曲线图的Python 接口;
   1. Python Call Graph
    * 访问地址: http://pycallgraph.slowchop.com/
    * 精巧地址: http://bit.ly/2TW8nX
    * 以及 PyGraphviz:
     * 访问地址: https://networkx.lanl.gov/wiki/pygraphviz
     * 精巧地址: http://bit.ly/4xX6eW
    * 都是来对象化调用Graphviz(http://www.graphviz.org) 绘制树图的接口;
   1. CaptchaImage
    * 访问地址: http://pypi.python.org/pypi/captchaimage/
    * 精巧网址: http://bit.ly/v9WAm
    * 接口非常简洁的python验证码生成,GNU/Linux下适用.原版在安装时有些小问题,提供一个修改版http://wiki.woodpecker.org.cn/moin/zsp/captchaimage ,修改版的精巧网址 http://is.gd/51sT
   1.PyCAPTCHA
     * 访问地址: http://pypi.python.org/pypi/PyCAPTCHA/0.4
     * 精巧网址: http://bit.ly/BZjjR
     * 精巧网址: 另一个验证码生成,更强大,不过相对用起来也繁琐一点

 深入::
  高级的图形/桌面应用支持:
  * GIMP Python Documentation
   * 访问地址: http://www.gimp.org/docs/python
   * 精巧地址: http://bit.ly/6DxzY
   * 跨平台照片处理软件GIMP 的Python 接口,这是类似 PhotoShop 的强力照片数字暗室软件,可以借助Python 开发各种特效插件;同时也可以通过接口使用GIMP 提供的各种图片处理能力;
  * PyOpenGL: 
   * 访问地址: http://pyopengl.sourceforge.net/
   * 精巧地址: http://bit.ly/2gOUKk
   * 它封装了"OpenGL应用程序编程接口",通过该模块可以在程序中集成2D和3D的图形.
  * ReportLab: 
   * 访问地址: http://www.reportlab.org/
   * 精巧地址: http://bit.ly/PmJfm
   * 是一个非常方便的生成PDF文档的Python 库.
  * 桌面软件开发框架: 
   1. TkInter
    * 访问地址: http://wiki.python.org/moin/TkInter
    * 精巧地址: http://bit.ly/4qdc6u
    * 是Python 内置的GUI接口,支持Tk库的图形开发,而且Tk 是古老的Tcl脚本语言的GUI支持库,因其精巧快速,几乎所有操作系统都有兼容版本;
   1. WxPython 
    * 访问地址: http://wiki.python.org/moin/WxPython 
    * 精巧地址: http://bit.ly/m8UVp
    * 是跨平台GUI框架WxWidgets的Python 接口;发展稳定,甚至于有开门的IDE!
    * Limodou 的作品UliPad:
     * 访问地址: http://code.google.com/p/ulipad/
     * 精巧地址: http://bit.ly/3EHHJV
    * 就是使用 wxPython 开发的跨平台编辑器!
   1. PyQt
    * 访问地址: http://wiki.python.org/moin/PyQt
    * 精巧地址: http://bit.ly/3OKUnu
    * 是商业化GUI框架 Qt 的Python 接口,可以完成非常美观的跨平台软件;QT就是实现了KDE环境的那个库,由一系列的模块组成,有qt, qtcanvas, qtgl,qtnetwork, qtsql, qttable, qtui and qtxml,包含有300个类和超过5750个的函式和方法. PyQt还支持一个叫qtext的模块,它包含一个QScintilla库. 该库是Scintillar编辑器类的Qt接口. 
   1. PyGTK+
    * 访问地址: http://www.pygtk.org/
    * 是GTK+(http://www.gtk.org/ 基于C的跨平台GUI框架) 的Python 接口,用以快速使用Python 来创建基于GTK+ 的桌面图形界面;
   1. Python for Delphi
    * 访问地址: http://www.atug.com/andypatterns/Python DelphiTalk.htm
    * 精巧地址: http://bit.ly/2UWUiD
    * 是古老好用的GUI框架Delphi 的Python 接口,如果对Delphi非常熟悉的开发人员一定喜欢;-)
   1. PyGUI
    * 访问地址: http://www.cosc.canterbury.ac.nz/greg.ewing/Python _gui/
    * 精巧地址: http://bit.ly/3CCNMI
    * 全新开发的跨平台GUI框架,目标是一个完善的独立的GUI框架;
   * 有关这部分的综合介绍,推荐 沈崴的"Python 史书·GUI 部"
    * 访问地址: http://wiki.woodpecker.org.cn/moin/PyHiStory/PyGuiHistoric
    * 精巧地址: http://bit.ly/3R8nHK 
   * 以上都是跨平台GUI框架,实际上还有丰富的操作系统依赖的GUI框架,就不在此一一列举了;
 前沿::
  3D,游戏,多媒体开发:
  * blender.org - Python 
   * 访问地址: http://www.blender.org/education-help/python/
   * 精巧地址: http://bit.ly/4iv8nf
   * Blender 是个全功能3D艺术创作平台,可以支持从3D建模/动画/渲染的全套3D电影制作!而Python 贯穿其中各个方面!
   * 实际上各种主流3D设计系统:3DS MAX,MaYa,LightWave, Panda3D, Nendo, Radiosity, Raw Triangle...都有Python 的扩展系统,以便设计师经过少量的学习后就可以利用脚本快速扩展出需要的特效插件来!
  * Inkscape Python Modules
   * 访问地址: http://wiki.inkscape.org/wiki/index.php/PythonModules
   * 精巧地址: http://bit.ly/1IGBQr
   * Inkscape 是GNU/Linux平台中类似 Illustration/CoreGraw/FreeHand 的平面矢量设计软件,也提供了全面的Python 接口,可以扩展插件,组织自动绘制脚本,利用Inkscape 对.svg 矢量图形进行处理;
  * pySonic
   * 访问地址: http://pysonic.sourceforge.net/
   * 精巧地址: http://bit.ly/4eL7h2
   * 音乐处理支持模块;
  * TextAloud
   * 访问地址: http://www.nextup.com/TextAloud/
   * 精巧地址: http://bit.ly/t24VE
   * Python 的TTS(Text To Speech)文本朗读支持模块,当然的只有E文等拼音文字的支持;
  * PyMedia - Python module for avi, mp3, dvd, wma, ogg processing
   * 访问地址: http://pymedia.org/
   * Python 多媒体处理模块,支持音频/视频的处理
  * pygame - Python game development
   * 访问地址: http://www.pygame.org/news.html
   * 精巧地址: http://bit.ly/3DDJPm
   * 是基于SDL 的游戏开发综合支持模块;可以快速开发跨平台的多媒体游戏!
   * SDL ~ Simple DirectMedia Layer 库;是为数不多的商业游戏开发公司使用的免费软件库之一. 它提供跨平台的二维帧缓冲区图形和音频服务,它支持 GNU/Linux、Win32 和 BeOS. 也不同程度地支持其它平台,包括 Solaris／IRIX／FreeBSD 和 MacOS. 除了大量的服务,包括线程／独立于字节存储次序的宏和 CD 音频,SDL 还提供了一个简单的 API,它允许您尽可能接近本机硬件. 使用 SDL 有三重优点：稳定／简单和灵活. 


== Py 应用扩展 ==
原有系统的扩展/融合,使用 Python 这般优秀的"胶水语言"来粘合新系统非常的轻松:

 常备::
  * C/C++ 到Python ,一般有两种基本模式:
   * `扩展`：最终用户运行Python 解译器程序,并导入用C++编写的Python "扩展模块".  想像一个C++写的库,给它一个Python 接口, 这样Python 程序员就可以使用它.  从Python 来看,这些模块就像是常规的Python 模块;
   * `内嵌`：最终用户运行C++写的程序,反过来调用Python 解译器,就像调用一个库函式.  想像一下为现有的应用程序加入脚本能力;    
   1. Swig: 
    * 访问地址: http://www.swig.org
    * 是一个自动的扩展构造工具. 它读入注释的C/C++头文件,为Python ／tcl／perl等多种脚本语言产生wrap代码. SWIG可以包装大量C++特性到Python 的扩展模块中. 
   1. SIP, a Python /C++ Bindings Generator
    * 访问地址: http://www.controlvideo.de/sip/
    * 精巧地址: http://bit.ly/Nb0RR
    * 由Phil Thompson创建,是一个C++模块构造器,专门为C++的类创造wrapper. 它曾经被用于创建PyQt和PyKDE扩展模块,因此比较出名. 支持C++特征很齐全,但比较复杂
   1. Boost Python Library
    * 访问地址: http://www.boost.org
    * 由David Abrahams创建. 该库提供了更多与众不同的C++ wrap到Python 扩展中,而只需要对要扩展的C++类写很少的附加信息. 
  * Python 到 C: ctypes
   * 访问地址: http://python.net/crew/theller/ctypes/
   * 精巧地址: http://bit.ly/3yjAHy
   * ctypes是一个Python 模块,使用他可以在Python 中创建和操作C语言的数据类型,这样可以在动态链接库中传递参数到C的函式中去;ctypes可以在Windows、GNU/Linux等多个平台上使用,甚至支持Windows上的COM开发
  * Python 到 Perl: PyPerl
   * 访问地址: http://wiki.python.org/moin/PyPerl  
   * 精巧地址: http://bit.ly/3vR3ET
   * 支持将Perl 应用嵌入到Python 中!
  * Python 到 Erlang: Candygram
   * 访问地址: http://candygram.sourceforge.net/
   * 精巧地址: http://bit.ly/1NqWth
   * 这是一个桥接模块,用以帮助Python应用快速接入Erlang 实现的分布式服务!
  * Python 到 Fortran: pyfort
   * 访问地址:http://pyfortran.sourceforge.net
   * 用来产生Fortran语言生成的扩展模块
  * Python 到 D语言: Pyd
   * 访问地址:http://pyd.dsource.org/
   * 方便D语言开发Python模块的库,目前开发处于停滞状态. 作者声称,等D语言2.0版本稳定下来,会来一次重写. 
  * Python 到 Lua: Lunatic Python
   * 访问地址: http://labix.org/lunatic-python
   * 精巧地址: http://bit.ly/3Vets0
   * 在Python中调用Lua,或在Lua中用Python
 深入::
  * PyRex: 
   * 访问地址: http://wiki.woodpecker.org.cn/moin/Pyrex
   * 精巧地址: http://bit.ly/1mICtd
   * 用Python 样的脚本写程序,然后自动转换成C代码,编译成纯C程序的方式来扩展应用!
  * The Jython Project
   * 访问地址: http://www.jython.org
   * JAVA平台上实现的Python ,支持用户使用Python 的语法编写脚本,来调用一切JAVA的库;
  * IronPython 
   * 访问地址: http://www.codeplex.com/IronPython 
   * 精巧地址: http://bit.ly/8bXUo
   * 在.net 平台上实现的Python ,支持用户使用Python 的语法编写脚本,来调用一切.NET的库;
  * BOO
   * 访问地址: http://boo.codehaus.org
   * 精巧地址: http://bit.ly/1FA6rS
   * 和IronPython 类似,是个有着Python 语法的.net 语言,不同之处是可以象脚本语言一样直接运行在命令行下面;一样可以轻松和.net其他语言互相协作无间!
  
 前沿::
  * Psyco: 
   * 访问地址: http://psyco.sourceforge.net/
   * 精巧地址: http://bit.ly/3jrshT
   * 一个Python 代码加速度器,可使Python 代码的执行速度提高到与编译语言一样的水平.
  * 用SSE2
   * 访问地址: http://wiki.woodpecker.org.cn/moin/PyWorkWithEES2
   * 精巧地址: http://bit.ly/2jZbSm
   * 支持使用SSE指令集的外部库,用以进行高性能计算,在极限条件下(不作分支判断,只在一个循环中做加减乘除计算)与纯Python 计算相比可以提升2000倍. 
  * 和Flash
   * 访问地址: http://wiki.woodpecker.org.cn/moin/UsageFlashInPyProj
   * 精巧地址: http://bit.ly/E1oCT
   * 支持建立Python 调用Flash的本地应用(不同于Adobe的Apollo);没有用到浏览器嵌入flash网页的方法,直接在Python win或者wxPython 建立的窗口中插入Flash ocx!


== Py 科学计算 ==
支持科研方面,Python 也从来没有落后:
  常备::
   * Numeric/Numarray/NumPy
    * 访问地址: http://numpy.scipy.org/
    * 精巧地址: http://bit.ly/10u2O0
    * Numarray是Python 的一个扩展库,主要用于处理任意维数的固定类型数组,简单说是一个矩阵库,它的底层代码是用C编写的
    * Numeric/Numarray/NumPy/SciPy之间关系参见网站： http://www.scipy.org/History_of_SciPy. 或者参看这个blog的中文翻译： Scipy和Numpy的前世今生 http://my.opera.com/zhangyunfeng/blog/show.dml/256938 
   * SciPy:
    * 访问地址: http://www.scipy.org/
    * 精巧地址: http://bit.ly/4Bg9RA
    * 它和NumPy一起工作, 提供了许多方便和高效的数值计算函式,如数值积分或优化
    * pylab
     * 访问地址: http://www.scipy.org/PyLab
     * 被设计用来取代NumPy, SciPy, Matplotlib, IPython 组合的科学计算环境,目前还没有完成
   * openbabel
    * 访问地址: http://openbabel.org
    * openbabel是转换分子建模和计算化学中各种数据格式的模块

 数据可视化::
   * matplotlib
    * 访问地址: http://matplotlib.sourceforge.net/
    * matplotlib是一个Python 2D图形库,可以从数据生成印刷质量的输出. 
   * vtk-Python 
    * 访问地址：http://cens.ioc.ee/projects/pyvtk/
    * 精巧地址: http://bit.ly/2sSQyn
    * vtk(http://www.vtk.org/)是一个3D图形库,使用pyvtk可以在Python 中操作vtk文件 
    * mayavi
     * 访问地址: http://mayavi.sourceforge.net/
     * mayavi是一个使用Python 和vtk可视化数据的工具,包含了一个用tkinter写的GUI
   * pymol
    * 访问地址: http://pymol.org/
    * pymol是一个查看分子3D结构的工具

 深入::
   * BioPython 
    * 访问地址: http://biopython.org/wiki/Download
    * 精巧地址: http://bit.ly/Ipaud
    * 生物学Python ,支持各种遗传学的DNA数据分析等等;
   * mmtk
    * 访问地址: http://dirac.cnrs-orleans.fr/MMTK/
    * 精巧地址: http://bit.ly/PlEPL
    * 用Python 写的功能强大分子建模工具包
   * SAGE:
    * 访问地址: http://sagemath.org/
    * 精巧地址: http://bit.ly/3SNn9Z
    * Software for Algebra and Geometry Experimentation ~ 代数与几何实验室! 是使用 Python 语言编写的数学方面专用模块,并使用交互式的 Python Shell 作为其用户界面. SAGE 的独特之处在于,它能够用作其他各种计算机代数系统的集成器,从而允许用户利用不同软件包的各自强项.
   
== Py 行业应用 ==
Python 在各种行业,一直有经典的支持:

 常备::
  * Bazaar Version Control
   * 访问地址: http://bazaar-vcs.org/
   * 缩写为 Bzr 的一种分布式版本管理系统,是Launchpad(https://launchpad.net/) 这一强大开源软件项目管理平台的基础系统,该平台上组织了包含Ubuntu 等等大型优秀软件工程! 使用Python 实际!
  * Mercurial
   * 访问地址: http://www.selenic.com/mercurial/
   * 精巧地址: http://bit.ly/BHEAo
   * 缩写为 Hg 的另一种优秀分布式版本管理系统,是Mozilla 等等大型开源软件工程使用的成熟系统!
   * 有关分布式版本管理的综合对比,参考:DistributedScm - 分布式配置管理
    * 访问地址: http://wiki.woodpecker.org.cn/moin/DistributedScm
    * 精巧地址: http://bit.ly/3myGFW
 深入::
  * Zenoss
   * 访问地址: http://www.zenoss.com/
   * 被sourceforge评为2007年3月的明星项目!是基于Zope(纯Python 平台)实现的企业级IT管理软件!
   * 是智能监控软件,他允许IT管理员依靠单一的WEB控制台来监控网络架构的状态和健康度.可以发现和管理公司IT环境的各类资产(包括服务器、网络、和其他结构设备). Zenoss可以创建关键资产清单和对应的组件级别(接口、服务、进程,已安装的软件等). 建立好模型后,就可以监控与报告IT架构中各种资源的状态和性能容限了. Zenoss同时提供与CMDB关联的事件和错误管理系统,以协助提高各类事件和提醒的管理效率. 以此提高IT管理人员的效率!
  * scons
   * 访问地址: http://www.scons.org/ 
   * Java有Ant这个巨火的构建工具,而在Python 就是scons了!
   * 简单点说,就是一个替代“autotools + make”的编译工具；用Python 语言写的 -- 配置文件也是Python ,能够在多平台上工作；支持并行编译、ccache等技术,能有效提供编译速度;
   
 前沿::
  * Tribon Solutions ~ Python Success Stories
   * 访问地址: http://www.python.org/about/success/tribon/
   * 精巧地址: http://bit.ly/1vVEDy
   * 船舶制造CAD系统,支持专业的船舶建造图纸辅助设计!而Python 是这个系统中重要的插件开发语言,有丰富的模块库;
  * Ice for Python 
   * 访问地址: http://www.zeroc.com/icepy.html
   * 精巧地址: http://bit.ly/18rWrB
   * ZeroC发布的面向网格计算的Ice(Internet Communications Engine),支持复制／负载均衡及应用程序的分发,并提供了一个网格应用程序维护管理工具；同样有 Python 的支持,可以快速完成类似 `SETI@home` 的分布式计算应用!
   
== Py 教育支持 ==
`十年树木,百年树人. 国之大计,教育为本!` Python 以其好学易用的特性,在教育的各个方面有出色的支持:

 常备::
  程序开发中文教学支持:
  * 中蟒(中文 Python )编程语言
   * 访问地址: http://www.chinesepython.org/cgi_bin/cgb.cgi/home.html
   * 精巧地址: http://bit.ly/1cVBcm
   * 是基于Python 2.1.3 的代码,从内部增补中文关键字特性的脚本语言,支持用户使用中文来编写可执行代码;由于涉及源代码修订,所以,跟进Python 的发布,比较慢;
  * 周蟒
   * 访问地址: http://code.google.com/p/zhpy/
   * 精巧地址: http://bit.ly/q0wVN
   * 是Python 语言的"替身"(借用一部日本漫画中的专用名词来定义);又名`zhpy`,是一个轻量的,与 Python 语言互相兼容的中文 Python 语言; 让使用者可以使用纯中文语句 (繁体或简体) 来编写程式; 周蟒中文编程语言的目标是协助使用者透过中文编程语言学习编程语言,进而接触世界上大部份的编程语言,而不是脱离现实世界; 
   * 周蠎,其实就是一个纯Python 应用,相当于用Python 实现了一个可以自动翻译中文脚本为E文脚本的编译器,从而可以包裹在Python 语言之外,安全自然的支持中文编程,令广大没有学习过E文的人们,也可以享受Python 的简洁明快; 

 深入::
  知识管理:
  * MoinMoin
   * 访问地址: http://moinmo.in
   * 是纯Python 实现的全功能维基引擎,不使用DB,从而有极高的可维护和扩展性;是世界主流维基系统之一,很多大型社区的知识管理都使用 MoinMoin 架设;
   * 进一步介绍,推荐:"维基入门及 MoinMoin 基本使用"
    * 访问地址: http://www.zoomquiet.org/share/s5/DriveIntoMoin/061031-DIMoin/
    * 精巧地址: http://bit.ly/48jLdA

 前沿::
  教育格局探索:
  * OLPC http://laptop.org/
   * One Laptop Per Child ~ 每个儿童一台笔记本电脑 计划是
   * 由MIT 发起的项目,旨在生产和发售低成本笔记本电脑给发展中国家的儿童,以便激发教育改革;为儿童们"学习获取知识"而特意设计的`XO`笔记本电脑,使用的桌面环境是 Sugar (简化版本的GNU/Linux);
   * attachment:Pippy-icon.png Pippy 
   * 教程地址: http://wiki.laptop.org/go/Pippy
   * 精巧地址: http://bit.ly/UjyDx
   * 基于Sugar 桌面应用软件的主力开发语言就是Python ,而 Pippy 就是Sugar 的应用接口仓库;
 

== Py 集锦资源 ==
有些资料是索引的索引,指向大量网站和索引,帮助大家快速了解Python 的丰厚,特此推荐:
 1.  '''Python 快速介绍'''^Limodou和Zoom.Quiet 合写^
  * 访问地址: http://www.zoomquiet.org/share/s5/intropy/
  * 精巧地址: http://bit.ly/41i72J
 1. `有关Python 的成功故事` ^官方网站收集组织^
  * 访问地址: http://www.python.org/about/success/
  * 精巧地址: http://bit.ly/21PDa9
 1. The Vaults of Parnassus: Python Resources
  * 访问地址: http://py.vaults.ca/apyllo.py
  * 精巧地址: http://bit.ly/10KY2U
  * 蟒巢 ~ 以问题域为分类,长期收集有大量的软件包信息
 1. Python Starship
  * 访问地址: http://starship.python.net/crew/index.html
  * 精巧地址: http://bit.ly/eMW11
  * Python 星际飞船,将各个开发人员视作发动机单元的空间服务;汇集有各种方面专家的Python 自用模块;


##endInc
= 资源回收 =
`无法分类,或不是完备的资源指引`
  * Python 指南: http://doc.chinahtml.com/Manual/python/tut/tut.html
   * 精巧地址: http://bit.ly/hTbof
  * 开始编程之旅: http://wiki.woodpecker.org.cn/moin/StartProgramming
   * 精巧地址: http://bit.ly/4bwSzl
  * Python 常用模块体验: http://wiki.woodpecker.org.cn/moin/PyCommonUsageMod
   * 精巧地址: http://bit.ly/1WiW4T
  * Effective--实效Python 编程: http://wiki.woodpecker.org.cn/moin/EffectivePyPrgramming
   * 精巧地址:  http://bit.ly/47fEwY
  * PyXML: 
   * 访问地址: http://pyxml.sourceforge.net/topics/
   * 精巧地址: http://bit.ly/3Rf7ga
   * 它是Python 中的一个XML工具集,通过它可以很好地解析和处理XML文档.更详细的可以参见这篇PyXML学习笔记:
    * 访问地址: http://man.lupaworld.com/content/manage/ringkee/pyxml.htm
    * 精巧地址: http://bit.ly/8uhLe

  * PyHtml: 
   * 访问地址: http://incolor.inetnebr.com/jepler/pyhtml/
   * 精巧地址: http://bit.ly/1HGzVi
   * 它是一个遵循Python 语法的扩展,并且修改Python 编译器使其允许使用HTML风格标签作为Python 语句块, 可并允许这些标签和语句直接将其值作为输出, 从而使得更容易书写具有Python 块缩进风格的HTML文档.
  * ...
  * iPython 
    * 访问地址: http://ipython.scipy.org/moin/
    * iPython 提供一个像octave,matlab那样的交互式的shell,比默认Python shell更好用, 又可以像系统Shell一样运行console命令


----
'''反馈'''

创建 by -- ZoomQuiet [[[DateTime(2008-06-17T14:23:01Z)]]]
||<^>[[PageComment2]]||<^>[:/PageCommentData:PageCommentData]''||
